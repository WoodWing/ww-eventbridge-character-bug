// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters3926f22c0a71dfebecbc589b115ea59bea977ec4324fbca4ee673832e2f9075eArtifactHash44726A5C": Object {
      "Description": "Artifact hash for asset \\"3926f22c0a71dfebecbc589b115ea59bea977ec4324fbca4ee673832e2f9075e\\"",
      "Type": "String",
    },
    "AssetParameters3926f22c0a71dfebecbc589b115ea59bea977ec4324fbca4ee673832e2f9075eS3BucketD0D63B0F": Object {
      "Description": "S3 bucket for asset \\"3926f22c0a71dfebecbc589b115ea59bea977ec4324fbca4ee673832e2f9075e\\"",
      "Type": "String",
    },
    "AssetParameters3926f22c0a71dfebecbc589b115ea59bea977ec4324fbca4ee673832e2f9075eS3VersionKey0CCDFB00": Object {
      "Description": "S3 key for asset version \\"3926f22c0a71dfebecbc589b115ea59bea977ec4324fbca4ee673832e2f9075e\\"",
      "Type": "String",
    },
    "AssetParameterseb588c44742ff8f9d8f6e83d56b108443f6f3b9d96749c66672b1e88b4b84e8bArtifactHash90A0F877": Object {
      "Description": "Artifact hash for asset \\"eb588c44742ff8f9d8f6e83d56b108443f6f3b9d96749c66672b1e88b4b84e8b\\"",
      "Type": "String",
    },
    "AssetParameterseb588c44742ff8f9d8f6e83d56b108443f6f3b9d96749c66672b1e88b4b84e8bS3Bucket2872F1D6": Object {
      "Description": "S3 bucket for asset \\"eb588c44742ff8f9d8f6e83d56b108443f6f3b9d96749c66672b1e88b4b84e8b\\"",
      "Type": "String",
    },
    "AssetParameterseb588c44742ff8f9d8f6e83d56b108443f6f3b9d96749c66672b1e88b4b84e8bS3VersionKey8728AAE0": Object {
      "Description": "S3 key for asset version \\"eb588c44742ff8f9d8f6e83d56b108443f6f3b9d96749c66672b1e88b4b84e8b\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "callerCDD24A0F": Object {
      "DependsOn": Array [
        "callerServiceRoleDefaultPolicyB7781121",
        "callerServiceRole17D29371",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameterseb588c44742ff8f9d8f6e83d56b108443f6f3b9d96749c66672b1e88b4b84e8bS3Bucket2872F1D6",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterseb588c44742ff8f9d8f6e83d56b108443f6f3b9d96749c66672b1e88b4b84e8bS3VersionKey8728AAE0",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterseb588c44742ff8f9d8f6e83d56b108443f6f3b9d96749c66672b1e88b4b84e8bS3VersionKey8728AAE0",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "eventBusName": Object {
              "Ref": "eventBus454F24CA",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "callerServiceRole17D29371",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "callerServiceRole17D29371": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "callerServiceRoleDefaultPolicyB7781121": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "eventBus454F24CA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "callerServiceRoleDefaultPolicyB7781121",
        "Roles": Array [
          Object {
            "Ref": "callerServiceRole17D29371",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "eventBridgeRuleDeadLetterQueue6D3E4870": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "eventBridgeRuleDeadLetterQueuePolicy40503751": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sqs:SendMessage",
              "Condition": Object {
                "ArnEquals": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "eventRuleCB6E2EC3",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "eventBridgeRuleDeadLetterQueue6D3E4870",
                  "Arn",
                ],
              },
              "Sid": "AllowEventRuletesteventRule36992A02",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "eventBridgeRuleDeadLetterQueue6D3E4870",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "eventBus454F24CA": Object {
      "Properties": Object {
        "Name": "testeventBus63D92E64",
      },
      "Type": "AWS::Events::EventBus",
    },
    "eventRuleAllowEventRuletestreceiver34030114BB5454EE": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "receiver325CA7F6",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "eventRuleCB6E2EC3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "eventRuleCB6E2EC3": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "eventBus454F24CA",
        },
        "EventPattern": Object {
          "source": Array [
            "test-source",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "receiver325CA7F6",
                "Arn",
              ],
            },
            "DeadLetterConfig": Object {
              "Arn": Object {
                "Fn::GetAtt": Array [
                  "eventBridgeRuleDeadLetterQueue6D3E4870",
                  "Arn",
                ],
              },
            },
            "Id": "Target0",
            "RetryPolicy": Object {
              "MaximumEventAgeInSeconds": 60,
              "MaximumRetryAttempts": 1,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "receiver325CA7F6": Object {
      "DependsOn": Array [
        "receiverServiceRoleDefaultPolicyCFDE5CD7",
        "receiverServiceRoleC79ED058",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters3926f22c0a71dfebecbc589b115ea59bea977ec4324fbca4ee673832e2f9075eS3BucketD0D63B0F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3926f22c0a71dfebecbc589b115ea59bea977ec4324fbca4ee673832e2f9075eS3VersionKey0CCDFB00",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3926f22c0a71dfebecbc589b115ea59bea977ec4324fbca4ee673832e2f9075eS3VersionKey0CCDFB00",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "DeadLetterConfig": Object {
          "TargetArn": Object {
            "Fn::GetAtt": Array [
              "receiverDeadLetterQueueE2A3730F",
              "Arn",
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "receiverServiceRoleC79ED058",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "receiverDeadLetterQueueE2A3730F": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "MessageRetentionPeriod": 1209600,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "receiverEventInvokeConfig1E7AB806": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "receiver325CA7F6",
        },
        "MaximumEventAgeInSeconds": 60,
        "MaximumRetryAttempts": 1,
        "Qualifier": "$LATEST",
      },
      "Type": "AWS::Lambda::EventInvokeConfig",
    },
    "receiverServiceRoleC79ED058": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "receiverServiceRoleDefaultPolicyCFDE5CD7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "receiverDeadLetterQueueE2A3730F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "receiverServiceRoleDefaultPolicyCFDE5CD7",
        "Roles": Array [
          Object {
            "Ref": "receiverServiceRoleC79ED058",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
